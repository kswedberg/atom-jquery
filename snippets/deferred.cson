".source.js":
  "deferred.always":
    prefix: "always"
    body: "always(${1:alwaysCallbacks})$0"
  "deferred.done":
    prefix: "done"
    body: "done(${1:doneCallbacks})$0"
  "deferred.fail":
    prefix: "fail"
    body: "fail(${1:failCallbacks})$0"
  "deferred.catch":
    prefix: "catch"
    body: "catch(${1:failCallback})$0"
  "deferred.progress":
    prefix: "progress"
    body: "progress(${1:progressCallbacks})$0"
  "deferred.promise":
    prefix: "promiseDeferred"
    body: "promise(${1:targetObject})$0"
  "deferred.reject":
    prefix: "rejectjq"
    body: "reject(${1:args})$0"
  "deferred.rejectWith":
    prefix: "rejectWith"
    body: "rejectWith(${1:context}${2:, }${3:args})$0"
  "deferred.resolve":
    prefix: "resolvejq"
    body: "resolve(${1:args})$0"
  "deferred.resolveWith":
    prefix: "resolveWith"
    body: "resolveWith(${1:context}${2:, }${3:args})$0"
  "deferred.state":
    prefix: "state"
    body: "state()$0"
  "deferred.then":
    prefix: "thenjq"
    body: "then(${1:doneCallbacks}${2:, ${3:failCallbacks}})$0"
  "$.Deferred":
    prefix: "Deferred"
    body: '''
      $.Deferred(${1:deferreds})$0
    '''
  "$.Deferred chain":
    prefix: ".Deferred"
    body: '''
      .Deferred(${1:deferreds})$0
    '''
  "$.when":
    prefix: "when"
    body: '''
      $.when(${1:deferreds})$0
    '''
  "$.when chain":
    prefix: ".when"
    body: '''
      .when(${1:deferreds})$0
    '''
